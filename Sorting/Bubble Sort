package advanced;

import java.util.Arrays;
import java.util.stream.IntStream;

public class Main {

    public static void main(String[] args) {

        int[] array = { 2, 1, 4, 6, 3, 5 };

        bubbleSort(array);   // O(n^2)

        optimizedBubbleSort(array);   // O(n^2)

        bubbleSortIterative(array);   // O(n^2)

        System.out.println(Arrays.toString(array));
    }

    static void bubbleSort(int[] array) {
        int arrayLength = array.length;
        IntStream.range(0, arrayLength - 1)
                .flatMap(i -> IntStream.range(1, arrayLength - i))
                .forEach(j -> {
                    if (array[j - 1] > array[j]) {
                        int temp = array[j];
                        array[j] = array[j - 1];
                        array[j - 1] = temp;
                    }
                });
    }

    static void optimizedBubbleSort(int[] array) {
        int index = 0, arrayLength = array.length;
        boolean swapped;
        while (index < arrayLength - 1) {
            swapped = false;
            for (int currentIndex = 1; currentIndex < arrayLength - index; currentIndex++) {
                if (array[currentIndex - 1] > array[currentIndex]) {
                    int temp = array[currentIndex - 1];
                    array[currentIndex - 1] = array[currentIndex];
                    array[currentIndex] = temp;
                    swapped = true;
                }
            }
            if(!swapped) {
                break;
            }
            index++;
        }
    }

    static void bubbleSortIterative(int[] array) {
        int arrayLength = array.length;
        for (int i = 0; i < arrayLength - 1; i++) {
            for (int j = 0; j < arrayLength - i - 1; j++) {
                if (array[j] > array[j + 1]) {
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
    }

}
